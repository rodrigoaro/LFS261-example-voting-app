pipeline {

  agent none

  stages {

    stage('vote-build'){
      agent{
        docker{
          image 'pyhton:2.7.16-slim'
		  args '--user root'
		}
      }
      when{
        changeset '**/vote/**'
      }
      steps{
        echo 'Compiling vote app.'
		dir(path: 'vote'){
			  sh 'pip install -r requirements.txt'
		}
      }
    }

    stage('vote-test'){
      agent{
        docker{
          image 'python:2.7.16-slim'
		  args '--user root'
		}
      }
	  
	  when{
		changeset '**/vote/**'
	  }
	  steps {
        echo 'Running Unit Tests on vote app.'
        dir(path: 'vote') {
          sh 'pip install -r requirements.txt'
          sh 'nosetests -v'
		}
	  }
    }
  
    stage('vote integration'){ 
      agent any 
      when{ 
        changeset "**/vote/**" 
        branch 'master' 
      } 
      steps{ 
        echo 'Running Integration Tests on vote app' 
        dir('vote'){ 
          sh 'sh integration_test.sh' 
        } 
      } 
    }
  
    stage('vote-docker-package') {
      agent any
      steps {
        echo 'Packaging vote app with docker'
        script {
          docker.withRegistry('https://index.docker.io/v1/', 'dockerlogin') {
            // ./vote is the path to the Dockerfile that Jenkins will find from the Github repo
            def voteImage = docker.build("rodrigoaro/vote:${env.GIT_COMMIT}", "./vote")
            voteImage.push()
            voteImage.push("${env.BRANCH_NAME}")
            voteImage.push("latest")
          }
        }
      }
    }
  }
}
